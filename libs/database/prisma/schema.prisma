// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permission {
  id             String              @id @default(uuid())
  name           String
  slug           String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  RolePermission RolePermission[]

  @@map("permissions")
}

model RolePermission {
  id           String      @id @default(uuid())
  name         String
  slug         String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  permissionId String
  roleId       String

  permission Permission @relation(fields: [permissionId], references: [id])
  role       Role       @relation(fields: [roleId], references: [id])

  @@unique([roleId, permissionId])
  @@map("role_permissions")
}

model Role {
  id              String              @id @default(uuid())
  name            String
  slug            String           @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  permissionId    Int
  rolePermissions RolePermission[]
  userRoles       UserRole[]

  @@map("roles")
}

model UserRole {
  id        String      @id @default(uuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  roleId    String

  user User @relation(fields: [userId], references: [id])
  role Role @relation(fields: [roleId], references: [id])

  @@unique([userId, roleId])
  @@map("user_roles")
}

model User {
  id                String          @id @default(uuid())
  firstName         String?
  lastName          String?
  email             String       @unique
  hashedPassword    String
  salt              String?
  birthDate         DateTime?
  gender            String       @default("M")
  address           String?
  city              String?
  state             String?
  country           String?
  imageUrl          String?
  isActive          Boolean?     @default(false)
  lastLogin         DateTime?
  phone             String?
  NbFailedAttempts  Int          @default(0)
  temporaryLockedAt DateTime?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  userRoles         UserRole[]
  marchant          Marchant?
  userSupport       UserSupport?

  @@map("users")
}

model Marchant {
  id     Int @id @default(autoincrement())
  userId String

  user User @relation(fields: [userId], references: [id])

  @@unique([userId])
  @@map("marchants")
}

model UserSupport {
  id     Int @id @default(autoincrement())
  userId String

  user User @relation(fields: [userId], references: [id])

  @@unique([userId])
  @@map("users_support")
}
